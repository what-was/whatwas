{
  "version": 3,
  "sources": ["../../../../../app/routes/__public/login/$.tsx"],
  "sourcesContent": ["import { json, redirect } from '@remix-run/node';\nimport { Box } from '@chakra-ui/react';\nimport { useLoaderData } from '@remix-run/react';\nimport { SignIn } from '@clerk/remix';\nimport { unauthenticatedRequest } from '~/lib/user.server';\nimport { getRedirectTo } from '~/lib/http';\nimport type { DataFunctionArgs } from '@remix-run/node';\n\nexport async function loader(args: DataFunctionArgs) {\n  try {\n    await unauthenticatedRequest(args);\n  } catch (error: any) {\n    if (error.redirectTo) {\n      return redirect(error.redirectTo);\n    }\n  }\n\n  return json({\n    redirectTo: getRedirectTo(args.request),\n  });\n}\n\nexport default function Login() {\n  const { redirectTo } = useLoaderData<typeof loader>();\n\n  return (\n    <Box\n      h=\"full\"\n      w=\"full\"\n      display=\"flex\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box display=\"grid\" gap=\"4\" gridTemplateColumns=\"1fr\">\n        <SignIn\n          routing={'path'}\n          path={'/login'}\n          signUpUrl=\"/signup\"\n          redirectUrl={redirectTo}\n        />\n      </Box>\n    </Box>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,mBAAuB;AACvB,kBAAuC;AA+B/B;AAbO,SAAR,QAAyB;AAC9B,QAAM,EAAE,WAAW,IAAI,cAA6B;AAEpD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,GAAE;AAAA,MACF,GAAE;AAAA,MACF,SAAQ;AAAA,MACR,SAAQ;AAAA,MACR,YAAW;AAAA,MACX,gBAAe;AAAA,MAEf,6DAAC,OAAI,SAAQ,QAAO,KAAI,KAAI,qBAAoB,OAC9C;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,MAAM;AAAA,UACN,WAAU;AAAA,UACV,aAAa;AAAA;AAAA,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,KANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA;AAAA,IAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA;AAEJ;",
  "names": []
}
