{
  "version": 3,
  "sources": ["../../../../app/routes/__app/settings.tsx"],
  "sourcesContent": ["import { Box, Button, Grid, GridItem, Select, Text } from '@chakra-ui/react';\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { getUser, getUserMeta, authenticatedRequest } from '~/lib/user.server';\nimport type { LoaderFunction, ActionFunction } from '@remix-run/node';\n\ninterface ThemePreferenceOptionProps {\n  label: React.ReactNode;\n  value: 'dark' | 'light' | 'auto';\n}\n\nconst ThemePreferenceOptions: ThemePreferenceOptionProps[] = [\n  { label: 'Light', value: 'light' },\n  { label: 'Dark', value: 'dark' },\n  { label: 'System', value: 'auto' },\n];\n\nexport const loader: LoaderFunction = async (args) => {\n  const { userId } = await authenticatedRequest(args);\n\n  const clerkUser = await getUser(userId);\n  const userMeta = await getUserMeta(userId);\n\n  const user = {\n    ...clerkUser,\n    ...userMeta,\n  };\n\n  return json({ user });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  // const {  } = await authenticatedRequest(request);\n\n  if (request.method === 'PATCH') {\n    const formData = await request.formData();\n    const themePreference = formData.get('themePreference');\n\n    if (typeof themePreference === 'string') {\n      const themePreferenceOption = ThemePreferenceOptions.find(\n        (option) => option.value === themePreference,\n      );\n\n      if (themePreferenceOption) {\n        // await updateUserMeta(userId, {\n        //   themePreference: themePreferenceOption.value,\n        // });\n        return redirect(`/settings`);\n      }\n    }\n  }\n\n  return null;\n};\n\nexport default function SettingsPage() {\n  const { user } = useLoaderData<typeof loader>();\n\n  return (\n    <Grid templateColumns=\"repeat(2, 1fr)\">\n      <Text as=\"h2\" size=\"md\">\n        Settings\n      </Text>\n\n      <GridItem colSpan={2}>\n        <Form method=\"patch\">\n          <Box display=\"flex\" flexDir=\"column\" gap={4}>\n            <Select\n              name=\"themePreference\"\n              placeholder=\"Theme Mode\"\n              defaultValue={user.themePreference}\n            >\n              {ThemePreferenceOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Select>\n\n            <Button color=\"green\" type=\"submit\">\n              Save\n            </Button>\n          </Box>\n        </Form>\n      </GridItem>\n    </Grid>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,kBAA2D;AAyDrD;AAjDN,IAAM,yBAAuD;AAAA,EAC3D,EAAE,OAAO,SAAS,OAAO,QAAQ;AAAA,EACjC,EAAE,OAAO,QAAQ,OAAO,OAAO;AAAA,EAC/B,EAAE,OAAO,UAAU,OAAO,OAAO;AACnC;AAwCe,SAAR,eAAgC;AACrC,QAAM,EAAE,KAAK,IAAI,cAA6B;AAE9C,SACE,mDAAC,QAAK,iBAAgB,kBACpB;AAAA,uDAAC,QAAK,IAAG,MAAK,MAAK,MAAK,wBAAxB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,YAAS,SAAS,GACjB,6DAAC,QAAK,QAAO,SACX,6DAAC,OAAI,SAAQ,QAAO,SAAQ,UAAS,KAAK,GACxC;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAY;AAAA,UACZ,cAAc,KAAK;AAAA,UAElB,iCAAuB,IAAI,CAAC,WAC3B,mDAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,OAApB;AAAA;AAAA;AAAA;AAAA,iBAEA,CACD;AAAA;AAAA,QATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA;AAAA,MAEA,mDAAC,UAAO,OAAM,SAAQ,MAAK,UAAS,oBAApC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA,KAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OAzBF;AAAA;AAAA;AAAA;AAAA,SA0BA;AAEJ;",
  "names": []
}
