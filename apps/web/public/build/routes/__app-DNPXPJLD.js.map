{
  "version": 3,
  "sources": ["../../../app/routes/__app.tsx", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-NLMMK76H.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/color-mode/dist/chunk-7NLW6UB6.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-7V3ZYTH7.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/shared-utils/dist/index.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-T2VHL7RE.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-3JUGYQRQ.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/object-utils/dist/index.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-GORXMMUN.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-OLGE5QAF.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/system/dist/chunk-QEVFQ4EU.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/dist/chunk-DKFDJSXF.mjs", "../../../../../node_modules/@chakra-ui/icons/node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs", "../../../../../node_modules/@chakra-ui/icons/dist/chunk-PHCA2RMO.mjs", "../../../../../node_modules/@chakra-ui/icons/dist/chunk-QAHQKGYV.mjs", "../../../../../node_modules/@chakra-ui/icons/dist/chunk-RGZJAHFA.mjs", "../../../../../node_modules/@saas-ui/collapse/src/use-collapse.ts", "../../../../../node_modules/@saas-ui/react-utils/src/get-child-of-type.ts", "../../../../../node_modules/@saas-ui/react-utils/src/get-children-of-type.ts", "../../../../../node_modules/@saas-ui/react-utils/src/use-responsive-value.ts", "../../../../../node_modules/@saas-ui/app-shell/src/app-shell.tsx", "../../../../../node_modules/@saas-ui/sidebar/node_modules/@chakra-ui/react-context/dist/index.mjs", "../../../../../node_modules/@saas-ui/provider/src/saas-provider.tsx", "../../../../../node_modules/@saas-ui/provider/src/router-provider.tsx", "../../../../../node_modules/@saas-ui/provider/src/use-link.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/use-sidebar.ts", "../../../../../node_modules/node_modules/@chakra-ui/react-utils/dist/chunk-ITIKTQWJ.mjs", "../../../../../node_modules/@saas-ui/sidebar/src/sidebar-context.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/sidebar.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/nav.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/nav-context.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/nav-group.tsx", "../../../../../node_modules/@saas-ui/sidebar/src/nav-item.tsx", "../../../app/components/logo.tsx"],
  "sourcesContent": ["import { json } from '@remix-run/node';\nimport {\n  Box,\n  ButtonGroup,\n  Container,\n  Flex,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { NavLink, Outlet, useLocation, Link } from '@remix-run/react';\nimport { AppShell, Button, useCollapse } from '@saas-ui/react';\nimport { NavItem, Sidebar, SidebarSection } from '@saas-ui/sidebar';\nimport { UserButton } from '@clerk/remix';\nimport { authenticatedRequest } from '~/lib/user.server';\nimport { Logo } from '~/components/logo';\nimport { REDIRECT_ROUTES } from '~/lib/constants';\nimport type { Location } from '@remix-run/react';\nimport type { DataFunctionArgs } from '@remix-run/node';\n\nexport async function loader(args: DataFunctionArgs) {\n  const { userId } = await authenticatedRequest(args);\n\n  return json({ userId });\n}\n\nconst isActiveRoute = (route: string, location: Location) => {\n  return location.pathname === route;\n};\n\nexport default function Layout() {\n  const sidebarWidth = useBreakpointValue(\n    { base: 0, md: '96' },\n    { fallback: '96', ssr: true },\n  );\n\n  const { onToggle, isOpen } = useCollapse({\n    defaultIsOpen: !!(sidebarWidth && Number(sidebarWidth) > 96) || true,\n  });\n\n  const location = useLocation();\n\n  if (!sidebarWidth) {\n    return (\n      <Container\n        h=\"full\"\n        gap=\"4\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n        p=\"2\"\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          position=\"sticky\"\n          top={0}\n          pb=\"2\"\n          zIndex=\"99\"\n          backgroundColor=\"gray.800\"\n          justifyContent=\"center\"\n        >\n          <Flex flexGrow={2} justifyContent=\"center\">\n            <Link to={REDIRECT_ROUTES.AUTHENTICATED}>\n              <Logo />\n            </Link>\n          </Flex>\n          <UserButton afterSignOutUrl={REDIRECT_ROUTES.GUEST} />\n        </Box>\n        <Box\n          flexGrow=\"1\"\n          maxH=\"calc(100vh - 40px)\"\n          overflowY=\"auto\"\n          w=\"full\"\n          py={2}\n        >\n          <Outlet />\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <AppShell\n      sidebar={\n        isOpen && sidebarWidth ? (\n          <Sidebar h=\"full\" w={sidebarWidth} isOpen={isOpen}>\n            <SidebarSection>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                gap=\"4\"\n                justifyContent=\"space-between\"\n              >\n                <Link to={REDIRECT_ROUTES.AUTHENTICATED}>\n                  <Logo />\n                </Link>\n                <UserButton afterSignOutUrl={REDIRECT_ROUTES.GUEST} />\n              </Box>\n            </SidebarSection>\n            <SidebarSection>\n              <NavItem\n                as={NavLink}\n                to=\"/\"\n                // isActive={isActiveRoute('/', location)}\n              >\n                Home\n              </NavItem>\n              <NavItem\n                as={NavLink}\n                to={'/wallet'}\n                isActive={isActiveRoute('/wallet', location)}\n              >\n                Wallet\n              </NavItem>\n            </SidebarSection>\n            <SidebarSection>\n              <ButtonGroup size=\"sm\" isAttached variant=\"outline\">\n                <Button onClick={onToggle}>Toggle</Button>\n              </ButtonGroup>\n            </SidebarSection>\n          </Sidebar>\n        ) : null\n      }\n    >\n      <Box as=\"main\" flex=\"1\" py=\"2\" px=\"4\">\n        {sidebarWidth && Number(sidebarWidth) <= 96 && !isOpen && (\n          <Button onClick={onToggle} position=\"fixed\" bottom=\"2\">\n            Sidebar\n          </Button>\n        )}\n        {!isOpen ? (\n          <Box mt=\"1\" mb=\"4\">\n            <Link to={REDIRECT_ROUTES.AUTHENTICATED}>\n              <Logo />\n            </Link>\n          </Box>\n        ) : null}\n        <Outlet />\n      </Box>\n    </AppShell>\n  );\n}\n\n// {/* <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n//   {/* Navigation. */}\n//   {user && (\n//     // <Navigation\n//     //   name={\n//     //     user?.firstName\n//     //       ? `${user.firstName} ${user.lastName}`\n//     //       : 'Anonymous User'\n//     //   }\n//     //   email={user?.emailAddresses[0].emailAddress ?? ''}\n//     //   image={user?.profileImageUrl ?? ''}\n//     // />\n//     <Sidebar />\n//   )}\n\n//   <Box\n//     ml={{ base: 0, md: 60 }}\n//     p=\"4\"\n//     bgColor={useColorModeValue('gray.50', 'gray.800')}\n//   >\n//     {/* Outlet. */}\n//     <Outlet />\n//   </Box>\n// </Box>; */}\n", "// src/use-theme.ts\nimport { ThemeContext } from \"@emotion/react\";\nimport { useContext } from \"react\";\nfunction useTheme() {\n  const theme = useContext(\n    ThemeContext\n  );\n  if (!theme) {\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`\"\n    );\n  }\n  return theme;\n}\n\nexport {\n  useTheme\n};\n", "// src/color-mode-context.ts\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\nexport {\n  ColorModeContext,\n  useColorMode,\n  useColorModeValue\n};\n", "import {\n  useTheme\n} from \"./chunk-NLMMK76H.mjs\";\n\n// src/hooks.ts\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult, theme };\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null)\n    return value;\n  const getValue = (val) => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__breakpoints) == null ? void 0 : _a2.asArray) == null ? void 0 : _b2[val];\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  var _a, _b;\n  if (value == null)\n    return value;\n  const getValue = (val) => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = theme.__cssMap) == null ? void 0 : _a2[val]) == null ? void 0 : _b2.value;\n  };\n  return (_b = (_a = getValue(value)) != null ? _a : getValue(fallback)) != null ? _b : fallback;\n}\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return (theme) => {\n    const fallbackArr = _fallback.filter(Boolean);\n    const result = _token.map((token2, index) => {\n      var _a, _b;\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, (_a = fallbackArr[index]) != null ? _a : token2);\n      }\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, (_b = fallbackArr[index]) != null ? _b : token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\n\nexport {\n  useChakra,\n  useToken,\n  getToken\n};\n", "// src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isDev() {\n  return process.env.NODE_ENV !== \"production\";\n}\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar warn = (options) => {\n  const { condition, message } = options;\n  if (condition && isDev()) {\n    console.warn(message);\n  }\n};\nfunction runIfFn(valueOrFn, ...args) {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn;\n}\nvar isFunction = (value) => typeof value === \"function\";\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nvar ariaAttr = (condition) => condition ? true : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\nexport {\n  ariaAttr,\n  callAll,\n  callAllHandlers,\n  cx,\n  dataAttr,\n  isObject,\n  runIfFn,\n  warn\n};\n", "import {\n  useChakra\n} from \"./chunk-7V3ZYTH7.mjs\";\n\n// src/use-style-config.ts\nimport {\n  resolveStyleConfig\n} from \"@chakra-ui/styled-system\";\nimport { mergeThemeOverride } from \"@chakra-ui/theme-utils\";\nimport {\n  filterUndefined,\n  memoizedGet as get,\n  mergeWith,\n  omit\n} from \"@chakra-ui/utils\";\nimport { useRef } from \"react\";\nimport isEqual from \"react-fast-compare\";\nfunction useStyleConfigImpl(themeKey, props = {}) {\n  var _a;\n  const { styleConfig: styleConfigProp, ...rest } = props;\n  const { theme, colorMode } = useChakra();\n  const themeStyleConfig = themeKey ? get(theme, `components.${themeKey}`) : void 0;\n  const styleConfig = styleConfigProp || themeStyleConfig;\n  const mergedProps = mergeWith(\n    { theme, colorMode },\n    (_a = styleConfig == null ? void 0 : styleConfig.defaultProps) != null ? _a : {},\n    filterUndefined(omit(rest, [\"children\"]))\n  );\n  const stylesRef = useRef({});\n  if (styleConfig) {\n    const getStyles = resolveStyleConfig(styleConfig);\n    const styles = getStyles(mergedProps);\n    const isStyleEqual = isEqual(stylesRef.current, styles);\n    if (!isStyleEqual) {\n      stylesRef.current = styles;\n    }\n  }\n  return stylesRef.current;\n}\nfunction useStyleConfig(themeKey, props = {}) {\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useMultiStyleConfig(themeKey, props = {}) {\n  return useStyleConfigImpl(themeKey, props);\n}\nfunction useComponentStyles__unstable(themeKey, props) {\n  var _a;\n  const { baseConfig, ...restProps } = props;\n  const { theme } = useChakra();\n  const overrides = (_a = theme.components) == null ? void 0 : _a[themeKey];\n  const styleConfig = overrides ? mergeThemeOverride(overrides, baseConfig) : baseConfig;\n  return useStyleConfigImpl(null, {\n    ...restProps,\n    styleConfig\n  });\n}\n\nexport {\n  useStyleConfig,\n  useMultiStyleConfig,\n  useComponentStyles__unstable\n};\n", "// src/should-forward-prop.ts\nimport { propNames } from \"@chakra-ui/styled-system\";\nvar allPropNames = /* @__PURE__ */ new Set([\n  ...propNames,\n  \"textStyle\",\n  \"layerStyle\",\n  \"apply\",\n  \"noOfLines\",\n  \"focusBorderColor\",\n  \"errorBorderColor\",\n  \"as\",\n  \"__css\",\n  \"css\",\n  \"sx\"\n]);\nvar validHTMLProps = /* @__PURE__ */ new Set([\"htmlWidth\", \"htmlHeight\", \"htmlSize\"]);\nfunction shouldForwardProp(prop) {\n  return validHTMLProps.has(prop) || !allPropNames.has(prop);\n}\n\nexport {\n  shouldForwardProp\n};\n", "// src/index.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\nfunction pick(object, keysToPick) {\n  const result = {};\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\nfunction assignAfter(target, ...sources) {\n  if (target == null) {\n    throw new TypeError(\"Cannot convert undefined or null to object\");\n  }\n  const result = { ...target };\n  for (const nextSource of sources) {\n    if (nextSource == null)\n      continue;\n    for (const nextKey in nextSource) {\n      if (!Object.prototype.hasOwnProperty.call(nextSource, nextKey))\n        continue;\n      if (nextKey in result)\n        delete result[nextKey];\n      result[nextKey] = nextSource[nextKey];\n    }\n  }\n  return result;\n}\nexport {\n  assignAfter,\n  compact,\n  omit,\n  pick,\n  split\n};\n", "import {\n  shouldForwardProp\n} from \"./chunk-3JUGYQRQ.mjs\";\n\n// src/system.ts\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport {\n  css,\n  isStyleProp\n} from \"@chakra-ui/styled-system\";\nimport { filterUndefined, objectFilter, runIfFn } from \"@chakra-ui/utils\";\nimport { assignAfter } from \"@chakra-ui/object-utils\";\nimport createStyled from \"@emotion/styled\";\nimport React from \"react\";\nvar _a;\nvar emotion_styled = (_a = createStyled.default) != null ? _a : createStyled;\nvar toCSSObject = ({ baseStyle }) => (props) => {\n  const { theme, css: cssProp, __css, sx, ...rest } = props;\n  const styleProps = objectFilter(rest, (_, prop) => isStyleProp(prop));\n  const finalBaseStyle = runIfFn(baseStyle, props);\n  const finalStyles = assignAfter(\n    {},\n    __css,\n    finalBaseStyle,\n    filterUndefined(styleProps),\n    sx\n  );\n  const computedCSS = css(finalStyles)(props.theme);\n  return cssProp ? [computedCSS, cssProp] : computedCSS;\n};\nfunction styled(component, options) {\n  const { baseStyle, ...styledOptions } = options != null ? options : {};\n  if (!styledOptions.shouldForwardProp) {\n    styledOptions.shouldForwardProp = shouldForwardProp;\n  }\n  const styleObject = toCSSObject({ baseStyle });\n  const Component = emotion_styled(\n    component,\n    styledOptions\n  )(styleObject);\n  const chakraComponent = React.forwardRef(function ChakraComponent(props, ref) {\n    const { colorMode, forced } = useColorMode();\n    return React.createElement(Component, {\n      ref,\n      \"data-theme\": forced ? colorMode : void 0,\n      ...props\n    });\n  });\n  return chakraComponent;\n}\n\nexport {\n  toCSSObject,\n  styled\n};\n", "import {\n  styled\n} from \"./chunk-GORXMMUN.mjs\";\n\n// src/factory.ts\nfunction factory() {\n  const cache = /* @__PURE__ */ new Map();\n  return new Proxy(styled, {\n    apply(target, thisArg, argArray) {\n      return styled(...argArray);\n    },\n    get(_, element) {\n      if (!cache.has(element)) {\n        cache.set(element, styled(element));\n      }\n      return cache.get(element);\n    }\n  });\n}\nvar chakra = factory();\n\nexport {\n  chakra\n};\n", "// src/forward-ref.tsx\nimport { forwardRef as forwardReactRef } from \"react\";\nfunction forwardRef(component) {\n  return forwardReactRef(component);\n}\n\nexport {\n  forwardRef\n};\n", "// src/icon.tsx\nimport {\n  chakra,\n  forwardRef,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar fallbackIcon = {\n  path: /* @__PURE__ */ jsxs(\"g\", { stroke: \"currentColor\", strokeWidth: \"1.5\", children: [\n    /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        strokeLinecap: \"round\",\n        fill: \"none\",\n        d: \"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      }\n    ),\n    /* @__PURE__ */ jsx(\n      \"path\",\n      {\n        fill: \"currentColor\",\n        strokeLinecap: \"round\",\n        d: \"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      }\n    ),\n    /* @__PURE__ */ jsx(\"circle\", { fill: \"none\", strokeMiterlimit: \"10\", cx: \"12\", cy: \"12\", r: \"11.25\" })\n  ] }),\n  viewBox: \"0 0 24 24\"\n};\nvar Icon = forwardRef((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-icon\", className);\n  const customStyles = useStyleConfig(\"Icon\", props);\n  const styles = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles\n  };\n  const shared = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles\n  };\n  const _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;\n  if (element && typeof element !== \"string\") {\n    return /* @__PURE__ */ jsx(chakra.svg, { as: element, ...shared, ...rest });\n  }\n  const _path = children != null ? children : fallbackIcon.path;\n  return /* @__PURE__ */ jsx(chakra.svg, { verticalAlign: \"middle\", viewBox: _viewBox, ...shared, ...rest, children: _path });\n});\nIcon.displayName = \"Icon\";\nvar icon_default = Icon;\n\nexport {\n  Icon,\n  icon_default\n};\n", "import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n", "// src/Hamburger.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar HamburgerIcon = createIcon({\n  displayName: \"HamburgerIcon\",\n  viewBox: \"0 0 24 24\",\n  d: \"M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z\"\n});\n\nexport {\n  HamburgerIcon\n};\n", "// src/ChevronRight.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport {\n  ChevronRightIcon\n};\n", "// src/ChevronDown.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ChevronDownIcon = createIcon({\n  displayName: \"ChevronDownIcon\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n});\n\nexport {\n  ChevronDownIcon\n};\n", "import * as React from 'react'\nimport { createContext, PropGetter } from '@chakra-ui/react-utils'\nimport { useDisclosure, useId } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nexport const [CollapseProvider, useCollapseContext] =\n  createContext<UseCollapseReturn>({\n    name: 'UseCollapseReturn',\n  })\n\nexport interface UseCollapse {\n  defaultIsOpen?: boolean\n  isOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  isCollapsible?: boolean\n}\n\nexport const useCollapse = (props: UseCollapse = {}) => {\n  const { isCollapsible = true, ...rest } = props\n\n  const id = `collapse-${useId()}`\n\n  const { isOpen, onToggle, onOpen, onClose } = useDisclosure(rest)\n\n  const getToggleProps: PropGetter = React.useCallback(\n    (props = {}) => {\n      const { className, ...rest } = props\n      if (isCollapsible) {\n        return {\n          className: cx('saas-collapse-toggle', className),\n          onClick: () => onToggle(),\n          'aria-expanded': isOpen.toString(),\n          'aria-controls': id,\n          ...rest,\n        }\n      }\n      return {}\n    },\n    [isCollapsible, isOpen]\n  )\n\n  const getCollapseProps = React.useCallback(\n    (props: any = {}) => {\n      return {\n        id,\n        in: isOpen,\n        ...props,\n      }\n    },\n    [isOpen]\n  )\n\n  return {\n    isCollapsible,\n    isOpen,\n    getToggleProps,\n    getCollapseProps,\n    onToggle,\n    onOpen,\n    onClose,\n  }\n}\n\nexport interface UseCollapseReturn extends ReturnType<typeof useCollapse> {}\n", "import * as React from 'react'\n\n/**\n * Get the first child of a specific type.\n * @param children The children\n * @param type The component type\n */\nexport function getChildOfType(\n  children: React.ReactNode,\n  type: React.JSXElementConstructor<any>\n) {\n  return (React.Children.toArray(children) as React.ReactElement[]).find(\n    (item) => item.type === type\n  )\n}\n", "import * as React from 'react'\n\n/**\n * Get all children of a specific type.\n * @param children The children\n * @param type The component type\n */\nexport function getChildrenOfType(\n  children: React.ReactNode,\n  type: React.JSXElementConstructor<any> | React.JSXElementConstructor<any>[]\n) {\n  return (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (item) =>\n      Array.isArray(type)\n        ? type.some((component) => component === item.type)\n        : item.type === type\n  )\n}\n", "import {\n  ResponsiveValue,\n  UseBreakpointOptions,\n  useTheme,\n  useBreakpointValue,\n} from '@chakra-ui/react'\n\nconst normalize = (variant: any, toArray?: (value: any) => any) => {\n  if (Array.isArray(variant)) return variant\n  else if (typeof variant === 'object') return toArray?.(variant)\n  if (variant != null) return [variant]\n  return []\n}\n\nexport const useResponsiveValue = (\n  value: ResponsiveValue<any>,\n  options?: UseBreakpointOptions\n) => {\n  const theme = useTheme()\n  const normalized = normalize(value, theme.__breakpoints?.toArrayValue)\n  return useBreakpointValue(normalized, options)\n}\n", "import * as React from 'react'\n\nimport {\n  Flex,\n  createStylesContext,\n  HTMLChakraProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  omitThemingProps,\n  SystemStyleObject,\n} from '@chakra-ui/react'\n\nimport { cx, __DEV__ } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('AppShell')\n\nexport interface AppShellProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'AppShell'> {\n  /**\n   * The top header navigation\n   */\n  navbar?: React.ReactNode\n  /**\n   * Main sidebar, positioned on the left\n   */\n  sidebar?: React.ReactNode\n  /**\n   * Secondary sidebar, positioned on the right\n   */\n  aside?: React.ReactNode\n  /**\n   * The footer\n   */\n  footer?: React.ReactNode\n  /**\n   * The main content\n   */\n  children: React.ReactNode\n}\n\nexport const AppShell: React.FC<AppShellProps> = (props: AppShellProps) => {\n  const styles = useMultiStyleConfig('AppShell', props) as Record<\n    string,\n    SystemStyleObject\n  >\n\n  const { navbar, sidebar, aside, footer, children, ...containerProps } =\n    omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    flexDirection: 'column',\n    ...styles.container,\n  }\n\n  const innerStyles: SystemStyleObject = {\n    flex: 1,\n    minHeight: 0, // make sure child flex divs get correct height.\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.inner,\n  }\n\n  const mainStyles: SystemStyleObject = {\n    flex: 1,\n    flexDirection: 'column',\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.main,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <Flex\n        {...containerProps}\n        sx={containerStyles}\n        className={cx('saas-app-shell', props.className)}\n      >\n        {navbar}\n        <Flex sx={innerStyles} className=\"saas-app-shell__inner\">\n          {sidebar}\n          <Flex sx={mainStyles} className=\"saas-app-shell__main\">\n            {children}\n          </Flex>\n          {aside}\n        </Flex>\n        {footer}\n      </Flex>\n    </StylesProvider>\n  )\n}\n\nif (__DEV__) {\n  AppShell.displayName = 'AppShell'\n}\n", "// src/index.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage != null ? errorMessage : getErrorMessage(hookName, providerName)\n      );\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport {\n  createContext\n};\n", "import * as React from 'react'\n\nimport { ChakraProvider, ChakraProviderProps } from '@chakra-ui/react'\n\nimport { theme as defaultTheme } from '@saas-ui/theme'\n\nexport interface SaasContextValue {\n  linkComponent?: React.ElementType<any>\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport const SaasContext = React.createContext<SaasContextValue>({})\n\ninterface SaasProviderProps extends ChakraProviderProps {\n  theme?: any\n  linkComponent?: React.ElementType<any>\n  children: React.ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport function SaasProvider({\n  theme,\n  linkComponent,\n  onError,\n  children,\n  ...rest\n}: SaasProviderProps) {\n  const context = {\n    linkComponent,\n    onError,\n  }\n\n  return (\n    <SaasContext.Provider value={context}>\n      <ChakraProvider {...rest} theme={theme || defaultTheme}>\n        {children}\n      </ChakraProvider>\n    </SaasContext.Provider>\n  )\n}\n\nexport const useSaas = (): SaasContextValue => React.useContext(SaasContext)\n", "import * as React from 'react'\nimport type { ParsedUrlQuery } from 'querystring'\n\ninterface NavigateOptions {\n  replace?: boolean\n}\n\ninterface RouterLocation {\n  pathname: string\n  hash?: string\n  search?: string\n}\n\nexport interface RouterContextValue {\n  navigate: (path: string, options?: NavigateOptions) => void\n  back: () => void\n  params?: ParsedUrlQuery\n  location?: RouterLocation\n  route?: string\n}\n\nexport const RouterContext = React.createContext<RouterContextValue | null>(\n  null\n)\n\n/**\n * A simple to wrapper to abstract basic router functionality\n */\nexport const RouterProvider = RouterContext.Provider\n\nexport const useRouterContext = () =>\n  React.useContext(RouterContext) as RouterContextValue\n\nexport const useNavigate = () => {\n  const context = useRouterContext()\n  return context?.navigate\n}\n\nexport const useParams = () => {\n  const context = useRouterContext()\n  return context?.params\n}\n\nexport const useLocation = () => {\n  const context = useRouterContext()\n  if (context) {\n    return context.location\n  } else if (typeof window !== 'undefined') {\n    return window.location\n  }\n  return null\n}\n\nexport interface UseActivePathOptions {\n  /**\n   * Set to false to match the first parth of the path.\n   * eg: /contacts will match /contacts/people\n   */\n  end?: boolean\n}\n\n/**\n * Matches the given path to the current active path.\n * @param path string\n * @param options UseActivePathOptions\n * @returns boolean\n */\nexport function useActivePath(\n  path: string,\n  options: UseActivePathOptions = {}\n) {\n  const { end = true } = options\n  const location = useLocation()\n  return !!React.useMemo(\n    () => location?.pathname.match(new RegExp(`${path}${end ? '$' : ''}`)),\n    [location?.pathname, path, options]\n  )\n}\n", "import React from 'react'\nimport { useSaas } from './saas-provider'\n\nconst Link: React.FC<any> = ({ children }) => <>{children}</>\n\nexport function useLink(): React.ElementType<any> {\n  const context = useSaas()\n  if (context?.linkComponent) {\n    return context.linkComponent\n  }\n  return Link\n}\n", "import { createContext } from '@chakra-ui/react-utils'\nimport {\n  ResponsiveValue,\n  ThemeTypings,\n  UseDisclosureReturn,\n} from '@chakra-ui/react'\n\ntype Variants = 'condensed' | 'default'\n\nexport interface UseSidebarReturn extends UseDisclosureReturn {\n  isMobile?: boolean\n  breakpoints?: ResponsiveValue<boolean>\n  variant?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['variants']\n    : Variants\n  size?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['sizes']\n    : string\n}\n\nexport const [SidebarProvider, useSidebarContext] =\n  createContext<UseSidebarReturn>({\n    name: 'SidebarContext',\n    strict: false,\n  })\n", "// src/context.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction createContext(options = {}) {\n  const {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [\n    Context.Provider,\n    useContext,\n    Context\n  ];\n}\n\nexport {\n  createContext\n};\n", "import { createContext } from '@chakra-ui/react-context'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [SidebarStylesProvider, useSidebarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `SidebarStylesContext`,\n  hookName: `useSidebarItemStyles`,\n  providerName: '<Sidebar />',\n})\n", "import * as React from 'react'\n\nimport {\n  chakra,\n  omitThemingProps,\n  HTMLChakraProps,\n  ChakraProps,\n  ThemingProps,\n  SystemProps,\n  useMultiStyleConfig,\n  useBreakpointValue,\n  SystemStyleObject,\n  IconButton,\n  IconButtonProps,\n  useDisclosure,\n  Portal,\n  ResponsiveValue,\n  forwardRef,\n  useTheme,\n} from '@chakra-ui/react'\nimport { cx, dataAttr, runIfFn } from '@chakra-ui/utils'\nimport { MaybeRenderProp } from '@chakra-ui/react-utils'\nimport { HamburgerIcon } from '@chakra-ui/icons'\nimport { motion, HTMLMotionProps, AnimatePresence } from 'framer-motion'\n\nimport { useResponsiveValue } from '@saas-ui/react-utils'\n\nimport { SidebarProvider, useSidebarContext } from './use-sidebar'\nimport { SidebarStylesProvider, useSidebarStyles } from './sidebar-context'\n\nexport interface SidebarOptions {\n  /**\n   * Spacing between child elements.\n   */\n  spacing?: SystemProps['margin']\n  /**\n   * Define breakpoints for the mobile nav.\n   *\n   * @default object { sm: true, lg: false }\n   */\n  breakpoints?: Record<string, boolean>\n\n  isOpen?: boolean\n\n  onOpen?: () => void\n\n  onClose?: () => void\n\n  motionPreset?: 'slideInOut' | 'none'\n}\n\nexport interface SidebarProps\n  extends SidebarOptions,\n    Pick<\n      HTMLMotionProps<'div'>,\n      'onAnimationStart' | 'onDrag' | 'onDragStart' | 'onDragEnd'\n    >,\n    Omit<\n      HTMLChakraProps<'div'>,\n      'css' | 'onAnimationStart' | 'onDrag' | 'onDragStart' | 'onDragEnd'\n    >,\n    ThemingProps<'Sidebar'> {}\n\nconst MotionBox = chakra(motion.nav)\n\nconst motionPresets = {\n  slideInOut: {\n    enter: {\n      left: 0,\n      transition: { type: 'spring', duration: 0.6, bounce: 0.15 },\n    },\n    exit: {\n      left: '-100%',\n    },\n  },\n  none: {},\n}\n\nexport const Sidebar = forwardRef<SidebarProps, 'nav'>((props, ref) => {\n  const styles = useMultiStyleConfig('Sidebar', props)\n  const theme = useTheme()\n  const defaultProps = theme.components['Sidebar']?.defaultProps\n\n  const variant = useResponsiveValue(props.variant ?? defaultProps?.variant, {\n    fallback: 'base',\n  })\n  const size = useResponsiveValue(props.size ?? defaultProps?.size, {\n    fallback: 'base',\n  })\n\n  const isCondensed = variant === 'condensed'\n\n  const {\n    spacing = 4,\n    children,\n    breakpoints = { base: true, lg: false },\n    className,\n    motionPreset = 'slideInOut',\n    isOpen: isOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...containerProps\n  } = omitThemingProps(props)\n\n  const isMobile = useBreakpointValue(breakpoints, {\n    fallback: undefined,\n  })\n  // we check this twice to avoid SSR issues.\n  const isMobileInitial = useBreakpointValue(breakpoints)\n  const isInitial = typeof isMobile === 'undefined'\n  const isCollapsible = isMobileInitial && !isCondensed\n  const isControlled = typeof isOpenProp !== 'undefined'\n\n  const disclosure = useDisclosure({\n    defaultIsOpen: isControlled ? isOpenProp : !isCollapsible,\n    isOpen: isOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const { isOpen, onClose, onOpen } = disclosure\n\n  React.useEffect(() => {\n    if ((isInitial && isMobileInitial) || isCondensed || isControlled) {\n      // make sure we do not show an initial animation or when this is a condensed sidebar\n      return\n    }\n    isMobileInitial ? onClose() : onOpen()\n  }, [isInitial, isCondensed, isMobileInitial])\n\n  const containerStyles: SystemStyleObject = {\n    '& > *:not(style) ~ *:not(style, .saas-resize-handle, .saas-sidebar__toggle-button + *)':\n      {\n        marginTop: spacing,\n      },\n    display: 'flex',\n    flexDirection: 'column',\n    ...(isCollapsible\n      ? {\n          position: 'absolute',\n          zIndex: 'modal',\n          top: 0,\n          left: { base: '-100%', lg: '0' },\n          bottom: 0,\n        }\n      : {\n          position: 'relative',\n        }),\n  }\n\n  const context = {\n    ...disclosure,\n    breakpoints,\n    isMobile,\n    variant,\n    size,\n  }\n\n  const variants = motionPresets[isCondensed ? 'none' : motionPreset || 'none']\n\n  return (\n    <SidebarProvider value={context}>\n      <SidebarStylesProvider value={styles}>\n        <MotionBox\n          ref={ref}\n          initial={false}\n          animate={!isInitial && (!isCollapsible || isOpen ? 'enter' : 'exit')}\n          variants={variants}\n          __css={{\n            ...containerStyles,\n            ...styles.container,\n          }}\n          {...containerProps}\n          id={disclosure.getDisclosureProps().id}\n          className={cx('saas-sidebar', className)}\n          data-condensed={dataAttr(isCondensed)}\n          data-collapsible={dataAttr(isCollapsible)}\n        >\n          {children}\n        </MotionBox>\n      </SidebarStylesProvider>\n    </SidebarProvider>\n  )\n})\n\nSidebar.defaultProps = {\n  variant: 'default',\n}\n\nSidebar.displayName = 'Sidebar'\n\nexport interface SidebarToggleButtonProps\n  extends Omit<IconButtonProps, 'aria-label' | 'icon'> {\n  icon?: MaybeRenderProp<{ isOpen: boolean }>\n  wrapperProps?: HTMLChakraProps<'div'>\n}\n\nexport const SidebarToggleButton: React.FC<SidebarToggleButtonProps> = (\n  props\n) => {\n  const { sx, wrapperProps, ...rest } = props\n  const sidebar = useSidebarContext()\n\n  const styles = useSidebarStyles()\n\n  const wrapperStyles = {\n    display: sidebar?.isMobile ? 'block' : 'none',\n    height: 8,\n    ...styles.toggleWrapper,\n  }\n\n  const buttonStyles = {\n    position: 'fixed',\n    top: 3,\n    left: 4,\n    ...styles.toggle,\n    ...sx,\n  }\n\n  const icon = props.icon ? (\n    runIfFn(props.icon, {\n      isOpen: sidebar.isOpen,\n    })\n  ) : (\n    <HamburgerIcon />\n  )\n\n  return (\n    <chakra.div\n      {...wrapperProps}\n      __css={wrapperStyles}\n      className={cx('saas-sidebar__toggle-button', wrapperProps?.className)}\n    >\n      <IconButton\n        variant=\"ghost\"\n        sx={buttonStyles}\n        aria-label=\"Toggle sidebar\"\n        {...sidebar.getButtonProps(props)}\n        {...rest}\n        icon={icon}\n      />\n    </chakra.div>\n  )\n}\n\nexport interface SidebarOverlayProps extends ChakraProps {}\n\nexport const SidebarOverlay: React.FC<SidebarOverlayProps> = (props) => {\n  const { onClose, isOpen, isMobile } = useSidebarContext()\n\n  const styles = useSidebarStyles()\n\n  return (\n    <Portal>\n      <AnimatePresence>\n        {isMobile && isOpen && (\n          <MotionBox\n            animate={isOpen ? 'enter' : 'exit'}\n            initial=\"exit\"\n            variants={{\n              enter: { opacity: 1 },\n              exit: { opacity: 0 },\n            }}\n            position=\"fixed\"\n            top=\"0\"\n            right=\"0\"\n            bottom=\"0\"\n            left=\"0\"\n            zIndex=\"overlay\"\n            {...props}\n            onClick={onClose}\n            __css={styles.overlay}\n          />\n        )}\n      </AnimatePresence>\n    </Portal>\n  )\n}\n\nSidebarToggleButton.displayName = 'SidebarToggleButton'\n\nexport interface SidebarSectionProps extends HTMLChakraProps<'div'> {\n  direction?: ResponsiveValue<'row' | 'column'>\n}\n\nexport const SidebarSection: React.FC<SidebarSectionProps> = (props) => {\n  const { direction = 'column', ...rest } = props\n  const styles = useSidebarStyles()\n  const sectionStyles = {\n    display: 'flex',\n    flexDirection: direction,\n    ...styles.section,\n  }\n\n  return (\n    <chakra.div\n      __css={sectionStyles}\n      {...rest}\n      className={cx('saas-sidebar__section', props.className)}\n    />\n  )\n}\n\nSidebarSection.displayName = 'SidebarSection'\n", "import * as React from 'react'\n\nimport {\n  chakra,\n  StackProps,\n  HTMLChakraProps,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nexport interface NavProps extends HTMLChakraProps<'nav'> {\n  orientation?: 'vertical' | 'horizontal'\n  spacing?: StackProps['spacing']\n}\n\nexport const Nav: React.FC<NavProps> = (props) => {\n  const styles = useStyleConfig('Nav', props)\n\n  const { children, spacing, orientation = 'vertical', ...rest } = props\n\n  const containerStyles = {\n    '& > *:not(style) ~ *:not(style)': {\n      mt: orientation === 'vertical' ? spacing : undefined,\n      me: orientation === 'horizontal' ? spacing : undefined,\n    },\n    ...styles,\n  }\n\n  return (\n    <chakra.nav\n      {...rest}\n      __css={containerStyles}\n      className={cx('saas-nav', props.className)}\n      data-orientation={orientation}\n    >\n      {children}\n    </chakra.nav>\n  )\n}\n\nNav.defaultProps = {\n  spacing: 0,\n}\n\nNav.displayName = 'Nav'\n", "import { createContext } from '@chakra-ui/react-context'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [NavGroupStylesProvider, useNavGroupStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavGroupStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n\nexport const [NavItemStylesProvider, useNavItemStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavItemStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n", "import * as React from 'react'\n\nimport {\n  chakra,\n  Collapse,\n  HTMLChakraProps,\n  useMultiStyleConfig,\n} from '@chakra-ui/react'\n\nimport { runIfFn, cx } from '@chakra-ui/utils'\nimport { MaybeRenderProp } from '@chakra-ui/react-utils'\nimport { ChevronDownIcon, ChevronRightIcon } from '@chakra-ui/icons'\n\nimport {\n  CollapseProvider,\n  useCollapseContext,\n  useCollapse,\n} from '@saas-ui/collapse'\n\nimport { NavGroupStylesProvider, useNavGroupStyles } from './nav-context'\n\nexport interface NavGroupTitleProps extends HTMLChakraProps<'div'> {\n  leftIcon?: React.ReactElement\n  collapseIcon?: MaybeRenderProp<{ isOpen: boolean }>\n  isCollapsible?: boolean\n}\n\nconst NavGroupIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, className, ...rest } = props\n\n  const _children = React.isValidElement<any>(children)\n    ? React.cloneElement(children, {\n        'aria-hidden': true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx('saas-nav-group__icon', className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nexport const NavGroupTitle: React.FC<NavGroupTitleProps> = (props) => {\n  const {\n    leftIcon,\n    collapseIcon = ({ isOpen }) =>\n      isOpen ? <ChevronDownIcon /> : <ChevronRightIcon />,\n    children,\n    ...rest\n  } = props\n  const styles = useNavGroupStyles()\n\n  const { getToggleProps, isOpen, isCollapsible } = useCollapseContext()\n\n  const iconStyles = { marginEnd: 2, ...styles.icon }\n\n  const toggleProps = getToggleProps(rest)\n\n  return (\n    <chakra.div\n      {...toggleProps}\n      __css={styles.title}\n      className={cx(\n        'saas-nav-group__title',\n        props.className,\n        toggleProps.className\n      )}\n    >\n      {leftIcon && <NavGroupIcon __css={iconStyles}>{leftIcon}</NavGroupIcon>}\n      <chakra.span flex=\"1\">{runIfFn(children, { isOpen })}</chakra.span>\n      {isCollapsible && (\n        <NavGroupIcon>{runIfFn(collapseIcon, { isOpen })}</NavGroupIcon>\n      )}\n    </chakra.div>\n  )\n}\n\nNavGroupTitle.displayName = 'NavGroupTitle'\n\nexport interface NavGroupProps extends Omit<HTMLChakraProps<'div'>, 'title'> {\n  title?: React.ReactNode\n  isCollapsible?: boolean\n  defaultIsOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  icon?: React.ReactElement\n}\n\nexport const NavGroupContent: React.FC<HTMLChakraProps<'div'>> = (props) => {\n  const styles = useNavGroupStyles()\n  return (\n    <chakra.div\n      {...props}\n      __css={styles.content}\n      className={cx('saas-nav-group__content', props.className)}\n    />\n  )\n}\n\nexport const NavGroup: React.FC<NavGroupProps> = (props) => {\n  const {\n    title,\n    icon,\n    isCollapsible,\n    defaultIsOpen,\n    onOpen,\n    onClose,\n    children,\n    ...rest\n  } = props\n  const styles = useMultiStyleConfig('NavGroup', props)\n\n  const collapse = useCollapse(props)\n  const { getCollapseProps } = collapse\n\n  const header = title && <NavGroupTitle leftIcon={icon}>{title}</NavGroupTitle>\n\n  let content = <NavGroupContent>{children}</NavGroupContent>\n\n  if (isCollapsible) {\n    content = <Collapse {...(getCollapseProps() as any)}>{content}</Collapse>\n  }\n\n  return (\n    <NavGroupStylesProvider value={styles}>\n      <CollapseProvider value={collapse}>\n        <chakra.div\n          __css={{\n            userSelect: 'none',\n            ...styles.container,\n          }}\n          {...rest}\n          className={cx('saas-nav-group', props.className)}\n          role=\"group\"\n        >\n          {header}\n          {content}\n        </chakra.div>\n      </CollapseProvider>\n    </NavGroupStylesProvider>\n  )\n}\n\nNavGroup.displayName = 'NavGroup'\n\nNavGroup.defaultProps = {\n  defaultIsOpen: true,\n  isCollapsible: false,\n}\n", "import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemProps,\n  useMultiStyleConfig,\n  Tooltip,\n  TooltipProps,\n} from '@chakra-ui/react'\n\nimport { cx, dataAttr } from '@chakra-ui/utils'\nimport { useLink } from '@saas-ui/provider'\n\nimport { useSidebarContext } from './use-sidebar'\nimport { NavItemStylesProvider, useNavItemStyles } from './nav-context'\n\nexport interface NavItemLabelProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'NavLink'> {}\n\nexport const NavItemLabel = forwardRef<NavItemLabelProps, 'span'>(\n  ({ children, ...props }, ref) => {\n    const styles = useNavItemStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        __css={styles.label}\n        {...props}\n        className={cx('saas-nav-item__label', props.className)}\n      >\n        {children}\n      </chakra.span>\n    )\n  }\n)\n\nNavItemLabel.displayName = 'NavItemLabel'\n\nconst NavItemIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const styles = useNavItemStyles()\n\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement<HTMLChakraProps<any>>(child)\n    ? React.cloneElement(child, {\n        focusable: 'false',\n        'aria-hidden': true,\n      })\n    : null\n\n  return (\n    <chakra.span\n      {...rest}\n      className={cx('saas-nav-item__icon', props.className)}\n      __css={{\n        flexShrink: 0,\n        ...styles.icon,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nNavItemIcon.displayName = 'NavItemIcon'\n\nexport interface NavItemProps\n  extends HTMLChakraProps<'a'>,\n    ThemingProps<'NavItem'> {\n  href?: string\n  /**\n   * @deprecated use children instead\n   */\n  label?: string\n  icon?: React.ReactElement\n  inset?: SystemProps['paddingLeft']\n  /**\n   * @deprecated use tooltipProps to pass a custom tooltip label\n   */\n  tooltip?: React.ReactNode\n  tooltipProps?: TooltipProps\n  isActive?: boolean\n}\n\nexport const NavItem = forwardRef<NavItemProps, 'a'>((props, ref) => {\n  const {\n    href = '#',\n    label: labelProp,\n    icon,\n    inset,\n    className,\n    tooltip,\n    tooltipProps = {\n      placement: 'right',\n      openDelay: 400,\n    },\n    isActive,\n    children,\n    ...rest\n  } = omitThemingProps(props)\n  const RouterLink = useLink()\n  const { onClose, variant: sidebarVariant } = useSidebarContext() || {}\n  const isCondensed = sidebarVariant === 'condensed'\n\n  const styles = useMultiStyleConfig('NavItem', props)\n\n  let label = children || labelProp\n  let tooltipLabel = tooltip\n  if (typeof label === 'string') {\n    if (!tooltipLabel && isCondensed) {\n      tooltipLabel = label\n    }\n    label = <NavItemLabel hidden={isCondensed}>{label}</NavItemLabel>\n  }\n\n  let link = (\n    <chakra.a\n      {...rest}\n      ref={ref}\n      href={href}\n      className=\"nav-item__link\"\n      data-active={dataAttr(isActive)}\n      __css={styles.link}\n    >\n      <chakra.span\n        __css={{\n          ...styles.inner,\n          pl: inset,\n        }}\n        className=\"saas-nav-item__inner\"\n      >\n        {icon && <NavItemIcon>{icon}</NavItemIcon>}\n        {label}\n      </chakra.span>\n    </chakra.a>\n  )\n\n  if (href && href !== '#') {\n    link = <RouterLink href={href}>{link}</RouterLink>\n  }\n\n  return (\n    <NavItemStylesProvider value={styles}>\n      <Tooltip label={tooltipLabel} {...tooltipProps}>\n        <chakra.div\n          __css={styles.item}\n          onClick={onClose}\n          data-condensed={dataAttr(isCondensed)}\n          className={cx('saas-nav-item', className)}\n        >\n          {link}\n        </chakra.div>\n      </Tooltip>\n    </NavItemStylesProvider>\n  )\n})\n\nNavItem.displayName = 'NavItem'\n", "import { Box, Image } from '@chakra-ui/react';\nimport { Link } from '@remix-run/react';\nimport WhiteLogo from '~/shared/assets/logo-white.png';\n\nenum LOGO_WIDTHS {\n  xs = 96,\n  sm = 128,\n  md = 160,\n  lg = 192,\n  xl = 256,\n}\n\ntype LogoProps = {\n  size?: keyof typeof LOGO_WIDTHS;\n  to?: string;\n  className?: string;\n};\n\nexport function Logo(props: LogoProps) {\n  const { size, to, className } = props;\n  const width = LOGO_WIDTHS[size || 'md'];\n  const LogoImage = () => (\n    <Box className={className}>\n      <Image width={width} src={WhiteLogo} alt=\"Logo\" />\n    </Box>\n  );\n\n  if (to) {\n    return (\n      <Link to={to}>\n        <LogoImage />\n      </Link>\n    );\n  }\n\n  return <LogoImage />;\n}\n"],
  "mappings": "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",
  "names": ["import_react", "useTheme", "import_react", "useTheme", "cx", "import_react", "_a", "default2", "isEqual", "useStyleConfig", "import_react", "React", "chakra", "import_react", "forwardRef", "forwardReactRef", "forwardRef", "cx", "useStyleConfig", "chakra", "import_react", "import_jsx_runtime", "forwardRef", "CollapseProvider", "useCollapseContext", "createContext", "name", "useCollapse", "props", "isCollapsible", "rest", "_objectWithoutPropertiesLoose", "_excluded", "id", "useId", "isOpen", "onToggle", "onOpen", "onClose", "useDisclosure", "getToggleProps", "useCallback", "className", "_excluded2", "cx", "onClick", "toString", "getCollapseProps", "_extends", "in", "useResponsiveValue", "value", "options", "normalized", "variant", "toArray", "theme", "useTheme", "__breakpoints", "_theme$__breakpoints", "toArrayValue", "Array", "isArray", "useBreakpointValue", "StylesProvider", "useStyles", "createStylesContext", "AppShell", "props", "styles", "useMultiStyleConfig", "omitThemingProps", "navbar", "sidebar", "aside", "footer", "children", "containerProps", "_omitThemingProps", "_excluded", "flexDirection", "container", "flex", "minHeight", "minWidth", "inner", "mainStyles", "_extends", "main", "createElement", "value", "React", "Flex", "sx", "containerStyles", "className", "cx", "innerStyles", "__DEV__", "displayName", "import_react", "createContext", "createReactContext", "useContext", "_a", "useReactContext", "SaasContext", "createContext", "useSaas", "useContext", "SaasContext", "RouterContext", "createContext", "m", "Provider", "children", "React", "context", "useSaas", "linkComponent", "Link", "SidebarProvider", "useSidebarContext", "options", "strict", "errorMessage", "name", "Context", "createReactContext", "displayName", "Provider", "useContext", "_a", "context", "useReactContext", "error", "Error", "captureStackTrace", "call", "SidebarStylesProvider", "useSidebarStyles", "createContext", "hookName", "providerName", "MotionBox", "chakra", "motion", "nav", "motionPresets", "slideInOut", "enter", "left", "transition", "type", "duration", "bounce", "exit", "none", "Sidebar", "forwardRef", "props", "ref", "_theme$components$Sid", "_props$variant", "_props$size", "styles", "useMultiStyleConfig", "defaultProps", "useTheme", "components", "variant", "useResponsiveValue", "fallback", "v", "size", "_omitThemingProps", "omitThemingProps", "spacing", "children", "breakpoints", "base", "lg", "className", "motionPreset", "isOpen", "isOpenProp", "onOpen", "onOpenProp", "onClose", "onCloseProp", "containerProps", "isMobile", "useBreakpointValue", "undefined", "isMobileInitial", "isInitial", "isCollapsible", "isCondensed", "isControlled", "C", "disclosure", "useDisclosure", "defaultIsOpen", "React", "useEffect", "containerStyles", "_extends", "marginTop", "display", "flexDirection", "position", "zIndex", "top", "bottom", "value", "createElement", "initial", "animate", "variants", "__css", "container", "id", "getDisclosureProps", "cx", "dataAttr", "SidebarToggleButton", "sx", "wrapperProps", "rest", "_objectWithoutPropertiesLoose", "_excluded2", "sidebar", "wrapperStyles", "height", "toggleWrapper", "buttonStyles", "toggle", "icon", "runIfFn", "HamburgerIcon", "div", "IconButton", "getButtonProps", "SidebarToggleButton", "displayName", "SidebarSection", "props", "direction", "rest", "_objectWithoutPropertiesLoose", "_excluded3", "sectionStyles", "_extends", "display", "flexDirection", "useSidebarStyles", "section", "createElement", "chakra", "div", "__css", "className", "cx", "_excluded", "Nav", "styles", "useStyleConfig", "children", "spacing", "orientation", "containerStyles", "mt", "me", "undefined", "nav", "defaultProps", "NavGroupStylesProvider", "useNavGroupStyles", "createContext", "name", "hookName", "providerName", "NavItemStylesProvider", "useNavItemStyles", "NavGroupIcon", "_children", "isValidElement", "cloneElement", "focusable", "_className", "span", "alignSelf", "flexShrink", "NavGroupTitle", "leftIcon", "collapseIcon", "isOpen", "React", "ChevronDownIcon", "ChevronRightIcon", "_excluded2", "getToggleProps", "isCollapsible", "useCollapseContext", "iconStyles", "marginEnd", "icon", "toggleProps", "title", "flex", "runIfFn", "NavGroupContent", "content", "NavGroup", "useMultiStyleConfig", "collapse", "useCollapse", "getCollapseProps", "header", "Collapse", "value", "CollapseProvider", "userSelect", "container", "role", "defaultIsOpen", "NavItemLabel", "forwardRef", "_ref", "ref", "o", "label", "NavItemIcon", "child", "Children", "only", "clone", "NavItem", "_omitThemingProps", "omitThemingProps", "href", "labelProp", "inset", "tooltip", "tooltipProps", "placement", "openDelay", "isActive", "RouterLink", "useLink", "onClose", "variant", "sidebarVariant", "useSidebarContext", "isCondensed", "tooltipLabel", "hidden", "link", "a", "dataAttr", "inner", "pl", "Tooltip", "item", "onClick", "LOGO_WIDTHS", "import_jsx_dev_runtime", "p"]
}
