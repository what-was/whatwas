// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ThemePreference {
  LIGHT
  DARK
  AUTO
}

model UserMeta {
  id       String  @id @default(cuid())
  userId   String? @unique
  username String? @unique
  email    String? @unique

  themePreference ThemePreference? @default(AUTO)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  Note      Note[]
  Tag       Tag[]

  deletedAt DateTime?
}

model Tag {
  id   String @id @default(cuid())
  name String

  notes Note[]

  userId String

  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  UserMeta   UserMeta? @relation(fields: [userMetaId], references: [id])
  userMetaId String?

  deletedAt DateTime?

  @@index([userId])
}

model Note {
  id      String @id @default(cuid())
  content String

  tags Tag[]

  userId String

  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  UserMeta   UserMeta? @relation(fields: [userMetaId], references: [id])
  userMetaId String?

  deletedAt DateTime?

  @@index([userId])
}

model WalletRequisition {
  id            String @id @default(cuid())
  requisitionId String @unique
  userId        String
  agreementId   String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model WalletAccount {
  id            String @id @default(cuid())
  userId        String @unique
  accountId     String @unique
  requisitionId String
  balance       String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model WalletTransaction {
  id        String @id @default(cuid())
  accountId String
  userId    String
  status    String

  transactionId     String   @unique
  bookingDate       String
  valueDate         String
  bookingDateTime   DateTime
  valueDateTime     DateTime
  transactionAmount String
  currency          String

  sourceCurrency String?
  targetCurrency String?
  exchangeRate   String?

  proprietaryBankTransactionCode String?
  creditorName                   String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
